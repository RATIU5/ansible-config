# structure setup

- name: "Create directory structure"
  block:
    - name: Ensure ~/.zshenv file exists
      ansible.builtin.file:
        path: "{{ home }}/.zshenv"
        state: touch
        mode: "0o777"
      tags:
        - init

    - name: Ensure ~/.cache directory exists
      ansible.builtin.file:
        path: "{{ cache_dir }}"
        state: directory
        mode: "0o777"
      tags:
        - init

    - name: Ensure ~/.local/share directory exists
      ansible.builtin.file:
        path: "{{ data_dir }}"
        state: directory
        mode: "0o777"
      tags:
        - init

    - name: Ensure ~/.local/bin directory exists
      ansible.builtin.file:
        path: "{{ bin_dir }}"
        state: directory
        mode: "0o777"
      tags:
        - init

    - name: Ensure ~/.config directory exists
      ansible.builtin.file:
        path: "{{ config_dir }}"
        state: directory
        mode: "0o777"
      tags:
        - init

    - name: Ensure ~/.config/zsh directory exists
      ansible.builtin.file:
        path: "{{ config_dir }}/zsh"
        state: directory
        mode: "0o777"
      tags:
        - init

    - name: Ensure ~/.config/zsh/.zshrc file exists
      ansible.builtin.file:
        path: "{{ config_dir }}/zsh/.zshrc"
        state: touch
        mode: "0o777"
      tags:
        - init

# environment variables

- name: "Set environment variables"
  block:
    - name: Ensure ~/.zshenv has XDG_CONFIG_HOME set
      ansible.builtin.lineinfile:
        path: "{{ home }}/.zshenv"
        line: 'export XDG_CONFIG_HOME="{{ config_dir }}"'
        state: present
        insertafter: EOF
        create: true
        mode: "0o777"
      tags:
        - init

    - name: Ensure ~/.zshenv has XDG_DATA_HOME set
      ansible.builtin.lineinfile:
        path: "{{ home }}/.zshenv"
        line: 'export XDG_DATA_HOME="{{ data_dir }}"'
        state: present
        insertafter: EOF
        create: true
        mode: "0o777"

    - name: Ensure ~/.zshenv has XDG_BIN_HOME set
      ansible.builtin.lineinfile:
        path: "{{ home }}/.zshenv"
        line: 'export XDG_BIN_HOME="{{ bin_dir }}"'
        state: present
        insertafter: EOF
        create: true
        mode: "0o777"

    - name: Ensure ~/.zshenv has XDG_CACHE_HOME set
      ansible.builtin.lineinfile:
        path: "{{ home }}/.zshenv"
        line: 'export XDG_CACHE_HOME="{{ cache_dir }}"'
        state: present
        insertafter: EOF
        create: true
        mode: "0o777"

    - name: Ensure .zshenv has the location of the .zshrc file
      ansible.builtin.lineinfile:
        path: "{{ home }}/.zshenv"
        line: 'export ZDOTDIR="{{ config_dir }}/zsh"'
        state: present
        insertafter: EOF
        create: true
        mode: "0o777"
      tags:
        - init

# zsh setup

- name: Install zsh if it's not already installed
  tags:
    - init
  block:
    - name: Check if zsh is installed
      ansible.builtin.shell: which zsh
      register: zsh_installed
      ignore_errors: true

    - name: Install zsh
      community.general.homebrew:
        name: zsh
        state: present
      become: false
      when: zsh_installed.rc != 0

- name: Set zsh as the default shell
  tags:
    - init
  block:
    - name: Retrieve shell path
      ansible.builtin.shell: echo $SHELL
      register: shell

    - name: Retrieve zsh path
      ansible.builtin.shell: which zsh
      register: zsh_path

    - name: Set zsh as the default shell
      ansible.builtin.shell: chsh -s "{{ zsh_path.stdout }}"
      when: shell.stdout != zsh_path.stdout

- name: Configure homebrew
  block:
    - name: Skip global compinit (for homebrew on Linux)
      when: "'Linux' in ansible_system"
      ansible.builtin.lineinfile:
        path: "{{ zshrc }}"
        line: "skip_global_compinit=1"
        state: present
        insertafter: EOF
        create: true
        mode: "0o777"
      tags:
        - init

    - name: Add homebrew to path
      ansible.builtin.lineinfile:
        path: "{{ zshrc }}"
        line: 'eval "$({{ homebrew_prefix }}/bin/brew shellenv)"'
        state: present
        insertafter: EOF
        create: true
        mode: "0o777"
      tags:
        - init

    - name: Eval brew shellenv
      ansible.builtin.shell: 'eval "$({{ homebrew_prefix }}/bin/brew shellenv)"'
      tags:
        - init

- name: Install zsh-autosuggestions
  tags:
    - init
  block:
    - name: Install zsh-autosuggestions via homebrew
      community.general.homebrew:
        name: zsh-autosuggestions
        state: present
      become: false

    - name: Source zsh-autosuggestions
      ansible.builtin.lineinfile:
        path: "{{ zshrc }}"
        line: "source {{ homebrew_prefix }}/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
        state: present
        insertafter: EOF
        create: true
        mode: "0o777"

- name: Install starship
  tags:
    - init
  block:
    - name: Install starship via homebrew
      community.general.homebrew:
        name: starship
        state: present
      become: false

    - name: Add starship to zshrc
      ansible.builtin.lineinfile:
        path: "{{ zshrc }}"
        line: 'eval "$(starship init zsh)"'
        state: present
        create: true
        mode: "0o777"
