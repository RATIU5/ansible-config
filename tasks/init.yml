# structure setup

- name: "Create directory structure"
  block:
    - name: Ensure ~/.zshenv file exists
      ansible.builtin.file:
        path: "{{ HOME }}/.zshenv"
        state: touch
        mode: "0o644"
      tags:
        - init

    - name: Ensure ~/.config directory exists
      ansible.builtin.file:
        path: "{{ CONFIG_DIR }}"
        state: directory
        mode: "0o644"
      tags:
        - init

    - name: Ensure ~/.config/zsh directory exists
      ansible.builtin.file:
        path: "{{ CONFIG_DIR }}/zsh"
        state: directory
        mode: "0o644"
      tags:
        - init

    - name: Ensure ~/.config/zsh/.zshrc file exists
      ansible.builtin.file:
        path: "{{ CONFIG_DIR }}/zsh/.zshrc"
        state: touch
        mode: "0o644"
      tags:
        - init

# environment variables

- name: "Set environment variables"
  block:
    - name: Ensure ~/.zshenv has XDG_CONFIG_HOME set
      ansible.builtin.lineinfile:
        path: "{{ HOME }}/.zshenv"
        line: 'export XDG_CONFIG_HOME="{{ CONFIG_DIR }}"'
        state: present
        insertafter: EOF
        create: true
        mode: "0o644"
      tags:
        - init

    - name: Ensure .zshenv has the location of the .zshrc file
      ansible.builtin.lineinfile:
        path: "{{ HOME }}/.zshenv"
        line: 'export ZDOTDIR="{{ CONFIG_DIR }}/zsh"'
        state: present
        insertafter: EOF
        create: true
        mode: "0o644"
      tags:
        - init

# zsh setup

- name: Install zsh if it's not already installed
  block:
    - name: Check if zsh is installed
      shell: brew list --formula | grep -w zsh | grep '^zsh$'
      register: zsh_installed
      ignore_errors: True

    - name: Install zsh
      community.general.homebrew:
        name: zsh
        state: present
      when: zsh_installed.rc != 0
  tags:
    - init

- name: Set zsh as the default shell
  block:
    - name: Check if zsh is the default shell
      ansible.builtin.shell: echo $SHELL
      register: shell
      ignore_errors: True

    - name: Set zsh as the default shell
      ansible.builtin.shell: chsh -s /bin/zsh
      when: shell.stdout != '/bin/zsh'
  tags:
    - init

- name: Ensure zsh-autosuggestions is installed
  community.general.homebrew:
    name: zsh-autosuggestions
    state: present
  tags:
    - init

- name: Source zsh-autosuggestions
  ansible.builtin.lineinfile:
    path: "{{ zshrc }}"
    line: "source {{ HOMEBREW_PREFIX }}/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
    state: present
    insertafter: EOF
    create: true
    mode: "0o644"
  tags:
    - init

- name: Skip global compinit
  when: "'Linux' in ansible_system"
  ansible.builtin.lineinfile:
    path: "{{ zshrc }}"
    line: "skip_global_compinit=1"
    state: present
    insertafter: EOF
    create: true
    mode: "0o644"
  tags:
    - init

- name: Add homebrew to path
  ansible.builtin.lineinfile:
    path: "{{ zshrc }}"
    line: 'eval "$({{ HOMEBREW_PREFIX }}/bin/brew shellenv)"'
    state: present
    insertafter: EOF
    create: true
    mode: "0o644"
  tags:
    - init

- name: Eval brew shellenv
  ansible.builtin.shell: 'eval "$({{ HOMEBREW_PREFIX }}/bin/brew shellenv)"'
  mode: "0o644"
  args:
    executable: /bin/zsh
  tags:
    - init
